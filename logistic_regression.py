# -*- coding: utf-8 -*-
"""Logistic_Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S8L8JdnqgwNos9sppvgQFZZt0Ya7aG_w
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('green_tech_data.csv')
df

print(df.isnull().sum())

df['sustainability'].value_counts()

plt.hist(df['carbon_emissions'], bins=20, color='skyblue', edgecolor='black')
plt.title('Histogram of Carbon Emissions')
plt.xlabel('Carbon Emissions')
plt.ylabel('Frequency')
plt.show()

import seaborn as sns
sns.boxplot(x=df['energy_output'], color='lightgreen')
plt.title('Boxplot of Energy Output')
plt.xlabel('Energy Output')
plt.show()

plt.scatter(df['renewability_index'], df['cost_efficiency'], color='purple')
plt.title('Renewability Index vs Cost Efficiency')
plt.xlabel('Renewability Index')
plt.ylabel('Cost Efficiency')
plt.show()

correlation_matrix = df.corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap')
plt.show()

sns.pairplot(df, hue='sustainability', palette='dark')
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import mean_squared_error, r2_score

model = LogisticRegression()

x = df[['carbon_emissions','renewability_index','cost_efficiency']]
y = df['sustainability']

x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2,random_state=42)

model.fit(x_train,y_train)

y_pred = model.predict(x_test)

model_score = model.score(x_test,y_test)
print(model_score)

from sklearn.metrics import accuracy_score
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

from sklearn.metrics import confusion_matrix
confusion = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:")
print(confusion)

from sklearn.metrics import classification_report
report = classification_report(y_test, y_pred)
print("Classification Report:")
print(report)

import joblib
joblib.dump(model,'sustainability_model.pkl')

#load the model
model = joblib.load('sustainability_model.pkl')

# Load the model if it's not already loaded

# Create sample new data if needed
new_data = pd.DataFrame({
    'carbon_emissions': [0.5, 0.2, 0.8],
    'renewability_index': [0.9, 0.7, 0.3],
    'cost_efficiency': [0.8, 0.6, 0.4]
})

predictions  = model.predict(new_data)
print(f"Prediction: {predictions}")
probabilities = model.predict_proba(new_data)
print(f"Probabilities: {probabilities}")

